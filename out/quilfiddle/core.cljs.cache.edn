;; Analyzed by ClojureScript 1.7.35
{:use-macros nil, :excludes #{}, :name quilfiddle.core, :imports nil, :requires {cljs.pprint cljs.pprint, cljs cljs.js, cljs.js cljs.js, r cljs.tools.reader, cljs.tools.reader cljs.tools.reader, cljsjs.codemirror.mode.clojure cljsjs.codemirror.mode.clojure, quil.core quil.core, quil.middleware quil.middleware}, :uses {pprint cljs.pprint}, :defs {default-code {:name quilfiddle.core/default-code, :file "src/quilfiddle/core.cljs", :line nil, :column nil, :end-line 14, :end-column 18, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/core.cljs", :line 14, :column 6, :end-line 14, :end-column 18}}, st {:name quilfiddle.core/st, :file "src/quilfiddle/core.cljs", :line nil, :column nil, :end-line 61, :end-column 8, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/core.cljs", :line 61, :column 6, :end-line 61, :end-column 8}}, eval {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/core.cljs", :line 63, :column 7, :end-line 63, :end-column 11, :arglists (quote ([in-str]))}, :name quilfiddle.core/eval, :variadic false, :file "src/quilfiddle/core.cljs", :end-column 11, :method-params ([in-str]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in-str]))}, eval-code {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/core.cljs", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([cm]))}, :name quilfiddle.core/eval-code, :variadic false, :file "src/quilfiddle/core.cljs", :end-column 16, :method-params ([cm]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cm]))}, load {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/core.cljs", :line 92, :column 7, :end-line 92, :end-column 11, :arglists (quote ([lib cb]))}, :name quilfiddle.core/load, :variadic false, :file "src/quilfiddle/core.cljs", :end-column 11, :method-params ([lib cb]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lib cb]))}}, :require-macros {cljs.pprint cljs.pprint, cljs cljs.js, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{fiddle.runtime :hint-pattern :load :value :source :lang quil.core quil.middleware :source-map :error :clj :eval}, :order [fiddle.runtime :eval :source-map :error :value :hint-pattern :lang :source :clj quil.core quil.middleware :load]}, :doc nil}