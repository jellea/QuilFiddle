;; Analyzed by ClojureScript 1.7.28
{:use-macros {go cljs.core.async.macros, alt! cljs.core.async.macros}, :excludes #{}, :name quilfiddle.repl, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, sliding-buffer cljs.core.async, >! cljs.core.async, alts! cljs.core.async, put! cljs.core.async}, :defs {output-chan {:name quilfiddle.repl/output-chan, :file "src/quilfiddle/repl.cljs", :line nil, :column nil, :end-line 8, :end-column 17, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/repl.cljs", :line 8, :column 6, :end-line 8, :end-column 17}}, error-chan {:name quilfiddle.repl/error-chan, :file "src/quilfiddle/repl.cljs", :line nil, :column nil, :end-line 9, :end-column 16, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/repl.cljs", :line 9, :column 6, :end-line 9, :end-column 16}}, channel-piping-fn {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/repl.cljs", :line 11, :column 7, :end-line 11, :end-column 24, :arglists (quote ([chan]))}, :name quilfiddle.repl/channel-piping-fn, :variadic false, :file "src/quilfiddle/repl.cljs", :end-column 24, :method-params ([chan]), :protocol-impl nil, :arglists-meta (nil nil), :column nil, :line nil, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan]))}, eval {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/repl.cljs", :line 14, :column 16, :end-line 14, :end-column 20, :export true, :arglists (quote ([input-string]))}, :name quilfiddle.repl/eval, :variadic false, :file "src/quilfiddle/repl.cljs", :end-column 20, :method-params ([input-string]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column nil, :line nil, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-string]))}, listen-for-output {:protocol-inline nil, :meta {:file "/Users/jelleakkerman/Dev/archive/quilfiddle/src/quilfiddle/repl.cljs", :line 17, :column 16, :end-line 17, :end-column 33, :export true, :arglists (quote ([handler]))}, :name quilfiddle.repl/listen-for-output, :variadic false, :file "src/quilfiddle/repl.cljs", :end-column 33, :method-params ([handler]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column nil, :line nil, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}